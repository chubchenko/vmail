name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install Node.JS
        uses: actions/setup-node@v1
        with:
          node-version: '16.3.0'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.6'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: v1-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-${{ runner.os }}-yarn-

      - name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Javascript dependencies
        run: yarn install --immutable

      - name: FE build cache cache
        uses: actions/cache@v2
        with:
          path: |
            tmp/cache
          key: ${{ runner.os }}-builder-cache-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-builder-cache-v1-

      - name: Run rubocop linter
        run: bundle exec rubocop

      - name: Run eslint linter
        run: yarn lint

      - name: Run tests for GO parser
        run: go test -v
        working-directory: wasm_parser/parser

      - name: Run tests for GO inliner
        run: go test -v
        working-directory: wasm_inliner/inliner

      - name: Compile WASM parser
        run: bundle exec rake wasm:parser

      - name: Compile WASM inliner
        run: bundle exec rake wasm:inliner

      - name: Build website
        run: bundle exec middleman build

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: build # The folder the action should deploy.
